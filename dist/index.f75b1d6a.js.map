{"mappings":"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","sources":["node_modules/preact/src/constants.js","node_modules/preact/src/util.js","node_modules/preact/src/options.js","node_modules/preact/src/create-element.js","node_modules/preact/src/component.js","node_modules/preact/src/diff/children.js","node_modules/preact/src/diff/props.js","node_modules/preact/src/diff/index.js","node_modules/preact/src/render.js","node_modules/preact/src/clone-element.js","node_modules/preact-custom-element/src/index.js","node_modules/preact/src/diff/catch-error.js","node_modules/htm/dist/htm.module.js","node_modules/htm/preact/index.module.js","main.js"],"sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tc,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { h, cloneElement, render, hydrate } from 'preact';\n\nexport default function register(Component, tagName, propNames, options) {\n\tfunction PreactElement() {\n\t\tconst inst = Reflect.construct(HTMLElement, [], PreactElement);\n\t\tinst._vdomComponent = Component;\n\t\tinst._root =\n\t\t\toptions && options.shadow ? inst.attachShadow({ mode: 'open' }) : inst;\n\t\treturn inst;\n\t}\n\tPreactElement.prototype = Object.create(HTMLElement.prototype);\n\tPreactElement.prototype.constructor = PreactElement;\n\tPreactElement.prototype.connectedCallback = connectedCallback;\n\tPreactElement.prototype.attributeChangedCallback = attributeChangedCallback;\n\tPreactElement.prototype.disconnectedCallback = disconnectedCallback;\n\n\tpropNames =\n\t\tpropNames ||\n\t\tComponent.observedAttributes ||\n\t\tObject.keys(Component.propTypes || {});\n\tPreactElement.observedAttributes = propNames;\n\n\t// Keep DOM properties and Preact props in sync\n\tpropNames.forEach((name) => {\n\t\tObject.defineProperty(PreactElement.prototype, name, {\n\t\t\tget() {\n\t\t\t\treturn this._vdom.props[name];\n\t\t\t},\n\t\t\tset(v) {\n\t\t\t\tif (this._vdom) {\n\t\t\t\t\tthis.attributeChangedCallback(name, null, v);\n\t\t\t\t} else {\n\t\t\t\t\tif (!this._props) this._props = {};\n\t\t\t\t\tthis._props[name] = v;\n\t\t\t\t\tthis.connectedCallback();\n\t\t\t\t}\n\n\t\t\t\t// Reflect property changes to attributes if the value is a primitive\n\t\t\t\tconst type = typeof v;\n\t\t\t\tif (\n\t\t\t\t\tv == null ||\n\t\t\t\t\ttype === 'string' ||\n\t\t\t\t\ttype === 'boolean' ||\n\t\t\t\t\ttype === 'number'\n\t\t\t\t) {\n\t\t\t\t\tthis.setAttribute(name, v);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n\n\treturn customElements.define(\n\t\ttagName || Component.tagName || Component.displayName || Component.name,\n\t\tPreactElement\n\t);\n}\n\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\t// eslint-disable-next-line no-unused-vars\n\tconst { context, children, ...rest } = props;\n\treturn cloneElement(children, rest);\n}\n\nfunction connectedCallback() {\n\t// Obtain a reference to the previous context by pinging the nearest\n\t// higher up node that was rendered with Preact. If one Preact component\n\t// higher up receives our ping, it will set the `detail` property of\n\t// our custom event. This works because events are dispatched\n\t// synchronously.\n\tconst event = new CustomEvent('_preact', {\n\t\tdetail: {},\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t});\n\tthis.dispatchEvent(event);\n\tconst context = event.detail.context;\n\n\tthis._vdom = h(\n\t\tContextProvider,\n\t\t{ ...this._props, context },\n\t\ttoVdom(this, this._vdomComponent)\n\t);\n\t(this.hasAttribute('hydrate') ? hydrate : render)(this._vdom, this._root);\n}\n\nfunction toCamelCase(str) {\n\treturn str.replace(/-(\\w)/g, (_, c) => (c ? c.toUpperCase() : ''));\n}\n\nfunction attributeChangedCallback(name, oldValue, newValue) {\n\tif (!this._vdom) return;\n\t// Attributes use `null` as an empty value whereas `undefined` is more\n\t// common in pure JS components, especially with default parameters.\n\t// When calling `node.removeAttribute()` we'll receive `null` as the new\n\t// value. See issue #50.\n\tnewValue = newValue == null ? undefined : newValue;\n\tconst props = {};\n\tprops[name] = newValue;\n\tprops[toCamelCase(name)] = newValue;\n\tthis._vdom = cloneElement(this._vdom, props);\n\trender(this._vdom, this._root);\n}\n\nfunction disconnectedCallback() {\n\trender((this._vdom = null), this._root);\n}\n\n/**\n * Pass an event listener to each `<slot>` that \"forwards\" the current\n * context value to the rendered child. The child will trigger a custom\n * event, where will add the context value to. Because events work\n * synchronously, the child can immediately pull of the value right\n * after having fired the event.\n */\nfunction Slot(props, context) {\n\tconst ref = (r) => {\n\t\tif (!r) {\n\t\t\tthis.ref.removeEventListener('_preact', this._listener);\n\t\t} else {\n\t\t\tthis.ref = r;\n\t\t\tif (!this._listener) {\n\t\t\t\tthis._listener = (event) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.detail.context = context;\n\t\t\t\t};\n\t\t\t\tr.addEventListener('_preact', this._listener);\n\t\t\t}\n\t\t}\n\t};\n\treturn h('slot', { ...props, ref });\n}\n\nfunction toVdom(element, nodeName) {\n\tif (element.nodeType === 3) return element.data;\n\tif (element.nodeType !== 1) return null;\n\tlet children = [],\n\t\tprops = {},\n\t\ti = 0,\n\t\ta = element.attributes,\n\t\tcn = element.childNodes;\n\tfor (i = a.length; i--; ) {\n\t\tif (a[i].name !== 'slot') {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t\tprops[toCamelCase(a[i].name)] = a[i].value;\n\t\t}\n\t}\n\n\tfor (i = cn.length; i--; ) {\n\t\tconst vnode = toVdom(cn[i], null);\n\t\t// Move slots correctly\n\t\tconst name = cn[i].slot;\n\t\tif (name) {\n\t\t\tprops[name] = h(Slot, { name }, vnode);\n\t\t} else {\n\t\t\tchildren[i] = vnode;\n\t\t}\n\t}\n\n\t// Only wrap the topmost node with a slot\n\tconst wrappedChildren = nodeName ? h(Slot, null, children) : children;\n\treturn h(nodeName || element.nodeName.toLowerCase(), props, wrappedChildren);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","var n=function(t,s,r,e){var u;s[0]=0;for(var h=1;h<s.length;h++){var p=s[h++],a=s[h]?(s[0]|=p?1:2,r[s[h++]]):s[++h];3===p?e[0]=a:4===p?e[1]=Object.assign(e[1]||{},a):5===p?(e[1]=e[1]||{})[s[++h]]=a:6===p?e[1][s[++h]]+=a+\"\":p?(u=t.apply(a,n(t,a,r,[\"\",null])),e.push(u),a[0]?s[0]|=2:(s[h-2]=0,s[h]=u)):e.push(a)}return e},t=new Map;export default function(s){var r=t.get(this);return r||(r=new Map,t.set(this,r)),(r=n(this,r.get(s)||(r.set(s,r=function(n){for(var t,s,r=1,e=\"\",u=\"\",h=[0],p=function(n){1===r&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?h.push(0,n,e):3===r&&(n||e)?(h.push(3,n,e),r=2):2===r&&\"...\"===e&&n?h.push(4,n,0):2===r&&e&&!n?h.push(5,0,!0,e):r>=5&&((e||!n&&5===r)&&(h.push(r,0,e,s),r=6),n&&(h.push(r,n,0,s),r=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===r&&p(),p(a));for(var l=0;l<n[a].length;l++)t=n[a][l],1===r?\"<\"===t?(p(),h=[h],r=3):e+=t:4===r?\"--\"===e&&\">\"===t?(r=1,e=\"\"):e=t+e[0]:u?t===u?u=\"\":e+=t:'\"'===t||\"'\"===t?u=t:\">\"===t?(p(),r=1):r&&(\"=\"===t?(r=5,s=e,e=\"\"):\"/\"===t&&(r<5||\">\"===n[a][l+1])?(p(),3===r&&(h=h[0]),r=h,(h=h[0]).push(2,0,r),r=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(p(),r=2):e+=t),3===r&&\"!--\"===e&&(r=4,h=h[0])}return p(),h}(s)),r),arguments,[])).length>1?r:r[0]}\n","import{h as r,Component as o,render as t}from\"preact\";export{h,render,Component}from\"preact\";import e from\"htm\";var m=e.bind(r);export{m as html};\n","import define from \"preact-custom-element\";\nimport \"preact\";\nimport {html, Component} from 'htm/preact';\n\n\nclass MyCounter extends Component {\n  state = {\n    count: 0,\n  };\n\n  inc = () => {\n    this.setState((prev) => ({ count: prev.count + 1 }));\n  };\n\n  dec = () => {\n    this.setState((prev) => ({ count: prev.count - 1 }));\n  };\n\n  render(props, state) {\n    return html`\n      <style>\n        * {\n          font-size: 200%;\n        }\n\n        span {\n          width: 4rem;\n          display: inline-block;\n          text-align: center;\n        }\n\n        button {\n          width: 4rem;\n          height: 4rem;\n          border: none;\n          border-radius: 10px;\n          background-color: seagreen;\n          color: white;\n        }\n      </style>\n      <button onClick=${this.dec}>\n        -\n      </button>\n      <span>${state.count}</span>\n      <button onClick=${this.inc}>\n        +\n      </button>\n    `;\n  }\n}\n\ndefine(MyCounter, \"my-counter\", [\"count\"], { shadow: true });\n"],"names":["slice","options","vnodeId","rerenderQueue","prevDebounce","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","i","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","createVNode","original","vnode","__","__b","__e","__d","undefined","__h","constructor","Fragment","Component","context","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","setTimeout","queue","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","unmount","applyRef","tmp","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","setStyle","style","value","setProperty","test","dom","name","oldValue","useCapture","o","cssText","replace","toLowerCase","_listeners","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","provider","componentContext","renderHook","count","newType","contextType","prototype","render","doRender","sub","state","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","innerHTML","hydrate","diffProps","checked","diffElementNodes","diffed","root","cb","current","parentVNode","skipRemove","r","componentWillUnmount","this","replaceNode","firstChild","cloneElement","$85137d8754fac189$var$r","Object","t1","e1","n1","o1","hasOwnProperty","apply","ContextProvider","rest","connectedCallback","CustomEvent","detail","bubbles","cancelable","dispatchEvent","_vdom","h","_props","toVdom","element","nodeName","cn","toCamelCase","slot","Slot","wrappedChildren","_vdomComponent","hasAttribute","_root","str","_","toUpperCase","attributeChangedCallback","newValue","disconnectedCallback","_this","_listener","stopPropagation","error","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","$46eb45435212d36d$var$n","u","p","$46eb45435212d36d$var$t","Map","$5d836d6e65da64f6$export$c0bb0b647f701bb5","s1","r1","get","set","t2","n2","l","bind","$13c40c34b78c8ee2$export$c8a8987d4410bf2d","tagName","propNames","PreactElement","inst","Reflect","construct","HTMLElement","shadow","attachShadow","mode","create","observedAttributes","keys","propTypes","defineProperty","v","customElements","define","displayName","$13c40c34b78c8ee2$export$16fa2f45be04daa8","inc","prev","dec"],"version":3,"file":"index.f75b1d6a.js.map"}